stages:
  - test
  - build
  - deploy

variables:
  BUILD_IMAGE_VERSION: latest
  TAG_LOGIC: '(if [ "$${CI_COMMIT_BRANCH}" == "master" ]; then echo "latest"; else echo "$${CI_COMMIT_BRANCH}"; fi);'

run_test:
  stage: test
  image: zenika/alpine-chrome:with-node
  variables:
    NODE_ENV: "test"
  before_script:
    - npm install
  script:
    - npm run test

run_lint:
  stage: test
  image: registry.gitlab.com/picrossr/images/build-image:${BUILD_IMAGE_VERSION}
  before_script:
    - npm install
  script:
    - npm run lint

.gcloud-login: &gcloud-login
  - echo $GCP_SERVICE_KEY > keyfile.json
  - gcloud auth activate-service-account $GCP_SERVICE_ACCOUNT --key-file=keyfile.json
  - gcloud config set project $GCP_PROJECT_ID

build_image:
  stage: build
  image: google/cloud-sdk
  variables:
    NODE_ENV: "production"
  before_script:
    - *gcloud-login
  script:
    - TAG=$(eval $TAG_LOGIC)
    - gcloud builds submit . --config=cloudbuild.yaml --substitutions=TAG_NAME=$TAG,DESTINATION=$GCP_DESTINATION

deploy_image:
  stage: deploy
  image: google/cloud-sdk
  only:
    - main@rosie-rowe/wordsearch
  before_script:
    - *gcloud-login
  script:
    - gcloud run deploy client --image $GCP_DESTINATION --region us-east1 --platform managed
  when: manual